# N in [1, 400k]
# n in [0, 1B]

def solution(A):
    if len(A) < 3:
        return 0
    # Find nr of peaks, easy O(N), if A[-1], A[+1] is smaller
    peaks = []
    i = 1
    while i < len(A) - 1:
        if A[i] > A[i - 1] and A[i] > A[i + 1]:
            peaks.append(i)
            # Skip i forward by 2, because if current index is peak, curr + 1 is definitely not
            i += 1
        i += 1

    if len(peaks) <= 2:
        return len(peaks)
    # Return max nr of flags. We can put a flag every more than or equal to -nr-of-flags- distance
    #   This can be done in O(nr-of-peaks)
    flag_positions = [peaks[0]]
    max_flags = 1
    for num_flags in range(len(peaks), 1, -1):
        for peak in peaks[1:]:
            if peak - flag_positions[-1] >= num_flags:
                flag_positions.append(peak)
                max_flags = max(max_flags, len(flag_positions))
        # No sense to keep going all the way down if we already have equal or less flags than planted
        if num_flags <= max_flags:
            return max_flags

    # TODO How do primes relate to this??

    return max_flags


if __name__ == '__main__':
    print(solution([1,5,3,4,3,4,1,2,3,4,6,2]))
    print(solution([1]))
    print(solution([0, 0, 0, 0, 0, 1, 0, 1, 0, 1]))
    print(solution([79, 32, 1, 28, 41, 12, 74, 14, 20, 49, 43, 49, 22, 48, 49, 35, 10, 8, 25, 14, 12, 20, 9, 48, 82, 49, 95, 69, 90, 24, 49, 3, 65, 68, 70, 98, 43, 52, 91, 13, 65, 29, 5, 14, 78, 47, 57, 49, 66, 10, 50, 77, 96, 37, 85, 17, 40, 9, 5, 64, 59, 15, 89, 18, 73, 57, 9, 45, 99, 10, 2, 5, 92, 72, 17, 78, 22, 96, 44, 1, 42, 15, 38, 63, 97, 53, 39, 88, 97, 42, 51, 94, 21, 64, 36, 9, 53, 95, 19, 86, 63, 52, 64, 6, 89, 44, 94, 50, 98, 55, 38, 60, 19, 50, 44, 77, 55, 96, 6, 77, 68, 68, 42, 3, 1, 26, 52, 35, 76, 54, 33, 26, 56, 21, 72, 52, 77, 56, 55, 45, 18, 13, 26, 82, 86, 42, 30, 18, 29, 30, 86, 92, 10, 50, 74, 56, 95, 63, 30, 82, 79, 59, 54, 23, 97, 35, 10, 80, 46, 94, 3, 7, 17, 43, 59, 71, 67, 10, 61, 8, 21, 70, 48, 67, 74, 14, 97, 14, 48, 58, 47, 24, 53, 56, 8, 42, 93, 62, 47, 91, 55, 82, 65, 77, 6, 83, 84, 67, 2, 41, 58, 35, 11, 12, 94, 67, 45, 39, 21, 87, 28, 13, 94, 95, 42, 73, 81, 44, 86, 64, 17, 72, 82, 59, 32, 27, 89, 19, 96, 32, 64, 19, 61, 49, 43, 32, 3, 10, 0, 74, 68, 68, 79, 73, 31, 13, 53, 31, 48, 19, 48, 64, 48, 27, 28, 72, 44, 43, 24, 67, 0, 9, 58, 1, 51, 73, 20, 86, 84, 0, 57, 56, 3, 44, 59, 87, 11, 37, 73, 95, 97, 7, 8, 91, 78, 63, 36, 93, 24, 97, 85, 77, 96, 12, 45, 63, 19, 73, 37, 95, 81, 19, 27, 51, 99, 68, 73, 38, 61, 26, 47, 84, 58, 92, 79, 31, 12, 78, 74, 91, 48, 9, 98, 90, 67, 29, 49, 1, 42, 43, 78, 7, 93, 28, 98, 81, 83, 49, 91, 10, 9, 5, 11, 7, 71, 97, 36, 16, 31, 61, 94, 89, 39, 59, 43, 19, 82, 9, 38, 11, 87, 38, 79, 94, 95, 12, 14, 45, 78, 45, 59, 8, 92, 97, 61, 80, 88, 45, 44, 90, 7, 93, 63, 56, 16, 90, 44, 54, 44, 7, 5, 83, 31, 21, 91, 8, 78, 39, 94, 55, 65, 35, 73, 70, 4, 27, 67, 57, 50, 94, 50, 69, 34, 94, 90, 20, 98, 36, 45, 81, 14, 41, 65, 3, 36, 53, 90, 45, 72, 90, 11, 26, 98, 2, 21, 87, 54, 28, 47, 94, 83, 55, 95, 33, 54, 91, 10, 86, 31, 32, 28, 24, 9, 14, 25, 54, 61, 90, 63, 4, 70, 62, 60, 95, 13, 0, 59, 59, 89, 49, 12, 76, 81, 8, 7, 96, 14, 98, 19, 42, 21, 42, 92, 36, 77, 11, 70, 41, 87, 27, 51, 19, 90, 18, 45, 46, 90, 77, 94, 3, 5, 13, 79, 55, 94, 6, 26, 9, 31, 45, 59, 10, 88, 82, 65, 40, 50, 99, 73, 86, 45, 32, 20, 61, 37, 74, 78, 95, 53, 58, 35, 3, 29, 10, 76, 9, 92, 37, 21, 22, 0, 76, 5, 3, 33, 97, 37, 54, 87, 63, 4, 53, 64, 25, 51, 54, 82, 71, 17, 30, 39, 85, 49, 11, 27, 46, 74, 46, 46, 73, 81, 55, 11, 27, 88, 65, 48, 97, 82, 69, 35, 76, 90, 9, 27, 49, 1, 12, 29, 4, 54, 8, 83, 38, 11, 88, 63, 18, 7, 99, 44, 36, 12, 36, 38, 72, 10, 81, 14, 36, 80, 17, 96, 72, 74, 91, 30, 67, 7, 91, 62, 23, 57, 82, 52, 48, 69, 6, 75, 6, 47, 32, 35, 6, 70, 83, 30, 30, 92, 23, 53, 72, 36, 70, 8, 80, 36, 49, 73, 66, 25, 89, 21, 77, 60, 54, 26, 93, 76, 43, 66, 56, 90, 58, 73, 37, 32, 25, 4, 54, 19, 97, 0, 61, 55, 57, 51, 18, 34, 42, 16, 14, 0, 18, 59, 86, 9, 3, 80, 25, 3, 28, 84, 50, 73, 37, 90, 87, 71, 83, 54, 79, 54, 16, 83, 59, 62, 11, 77, 98, 47, 36, 22, 73, 59, 99, 72, 4, 61, 22, 23, 98, 13, 84, 88, 63, 62, 72, 77, 28, 23, 58, 73, 56, 84, 66, 2, 44, 99, 83, 59, 4, 6, 51, 21, 59, 67, 9, 7, 84, 70, 13, 57, 29, 9, 74, 28, 39, 60, 80, 29, 21, 34, 89, 0, 72, 31, 40, 3, 65, 41, 72, 1, 50, 51, 12, 72, 7, 39, 20, 94, 55, 25, 6, 36, 13, 46, 28, 45, 81, 93, 27, 96, 70, 5, 84, 13, 5, 88, 76, 89, 61, 85, 3, 40, 96, 62, 77, 8, 81, 30, 3, 27, 99, 33, 76, 70, 11, 70, 32, 35, 26, 52, 90, 95, 56, 97, 24, 51, 4, 7, 21, 76, 74, 2, 65, 83, 36, 47, 70, 75, 56, 45, 9, 71, 3, 29, 58, 39, 63, 69, 91, 54, 55, 23, 8, 95, 44, 99, 69, 61, 73, 19, 19, 10, 86, 58, 79, 30, 39, 3, 11, 72, 81, 39, 59, 20, 94, 95, 8, 65, 8, 54, 72, 65, 80, 75, 78, 65, 9, 78, 7, 32, 63, 68, 41, 45, 33, 21, 49, 60, 23, 82, 0, 49, 90, 96, 32, 55, 98, 53, 89, 69, 72, 27, 44, 49, 74, 29, 88, 91, 28, 62, 80, 89, 11, 13, 69, 40, 42, 40, 61, 47, 97, 28, 75, 90, 59, 28, 53, 97, 58, 59, 77, 8, 80, 31, 81, 60, 88, 60, 80, 33, 62, 86, 22, 7, 13, 23, 78, 31, 78, 26, 54, 42, 82, 38, 68, 7, 53, 92, 89, 27, 77, 42, 83, 22, 48, 85, 22, 37, 2, 63, 53, 31, 73, 6, 68, 97, 27]))
